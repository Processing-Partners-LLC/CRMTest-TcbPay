name: Deployment Demo

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Update and install OpenVPN
      run: |
        sudo apt-get update
        sudo apt-get install -y openvpn

    - name: Setup OpenVPN
      env:
        VPN_CONFIG: ${{ secrets.VPN_CONFIG }}
        VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
        VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}
      run: |
        echo "${VPN_CONFIG}" > vpn_config.ovpn
        echo -e "${VPN_USERNAME}\n${VPN_PASSWORD}" > vpn_auth.txt
        sudo openvpn --config vpn_config.ovpn --auth-user-pass vpn_auth.txt &
        sleep 30

    - name: Verify VPN connection
      id: vpn_check
      run: |
        if ping -c 4 ${{ secrets.BASTION_HOST }}; then
          echo "VPN connection established."
        else
          echo "VPN connection failed."
          exit 1
        fi

    - name: Add SSH key for Bastion host
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.BASTION_SSH_KEY }}

    - name: Transfer code to Bastion host
      run: |
        rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:~/deployment_code

    - name: Trigger deployment script on Bastion host
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }} "C:/Users/<YourUser>/deployment_code/deploy_to_ec2.bat ${{ secrets.EC2_HOST }}"

    - name: Cleanup
      run: |
        rm vpn_auth.txt
        sudo killall openvpn
